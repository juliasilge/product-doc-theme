---
title: "Posit Documentation Theme Example"
---

## Level Two

Some text for level two.

### Level Three

Some text for level three.

### Another Level Three {.preview-header} 

Some text for another level three

#### Level four

Four levels deep. How far can we go?

##### Level five

Five is jive.

###### Level six

Six is deep enough! Stop!


## Level Two Again

::: panel-tabset

### RHEL

```bash
$ yum
```

### Ubuntu | Debian

```bash
$ dpkg
```

### SUSE

```bash
$ zypper
```

:::

## Level two: callouts

Code-first means using code first. Does that mean we never do things manually?
No. Hands-on is delightful.

::: {.callout-note}
This is a note.
:::

::: {.callout-warning}
This is a warning.
:::

::: {.callout-important}
This is important.
:::

::: {.callout-tip}
This is a tip.
:::

::: {.callout-caution}
This is a cautionary tale.
:::

::: {.callout-note collapse="true"}
This is a collapsed note.
:::

::: {.callout-note}
## Some notes are not

This is a note with an alternate title.
:::

## Level two: coding

```r
cat("cats are cats\n")
```

```python
print("snakes are not cats")
```

## Level two: lists

### Unordered list

#### Compact

*   ant
    *   bear
    *   cat
    *   dog
*   elephant
    *   frog
    *   giraffe
        *   hyena
        *   iguana
    *   jaguar
*   kangaroo
*   lion
*   mouse

#### Spaced

*   This is some text that is presented as a spaced list.

    This type of list is a good fit when there are multiple paragraphs or
    complicated elements which span multiple lines.

*   It is also good for code.

    ```python
    forty_two = 21 * 2
    ```

*   Sometimes, lists need to breathe.

### Ordered list

#### Compact

1.  ant
    1.  bear
    1.  cat
    1.  dog
1.  elephant
    1.  frog
    1.  giraffe
        1.  hyena
        1.  iguana
    1.  jaguar
1.  kangaroo
1.  lion
1.  mouse

#### Spaced

1.  This is some text that is presented as a spaced list.

    This type of list is a good fit when there are multiple paragraphs or
    complicated elements which span multiple lines.

1.  It is also good for code.

    ```python
    forty_two = 21 * 2
    ```

1.  Sometimes, lists need to breathe.


### Mixed list

1.  ant
    *   bear
    *   cat
    *   dog
1.  elephant
    *   frog
    *   giraffe
        1.  hyena
        1.  iguana
    *   jaguar
1.  kangaroo
1.  lion
1.  mouse
